name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Verify tag matches package version
        run: |
          # Extract version from package.json
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          # Extract version from tag (remove 'v' prefix)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          
          echo "Package version: $PACKAGE_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          # Check if versions match
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi
          
          echo "âœ… Version check passed: Tag version matches package.json version"
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        run: |
          cd subnet-io-registry/docs
          pip install -r requirements.txt
      
      - name: Generate OpenAPI spec
        run: |
          cd subnet-io-registry/docs
          python generate_openapi.py
      
      - name: Install Node.js dependencies
        run: npm ci
      
      - name: Generate API client
        run: npm run generate-api
      
      - name: Build
        run: npm run build
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
